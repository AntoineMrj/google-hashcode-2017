# -*- coding: utf-8 -*-
"""
Created on Fri Nov 17 11:50:02 2017

@author: Antoine
"""

import outils
 
if __name__ == "__main__":

#-------------------------------------------------
    """ LECTURE DE LA MAP  : Code lecture_entete.py """
    map="charleston_road.in"               #Choix de la map   ( ex : charleston_road.in )
    entete = outils.lectureEntete(map)
    matrice = outils.creationMatrice(map)    #notre matrice

#-------------------------------------------------

    backbone = (int(entete[6]), int(entete[7]))   #on recupère les coord du backbone pour les ajouter à la liste de routeurs
    budget = int(entete[5])

    listeRouteurs = [[522, 287], [499, 258], [499, 237], [452, 261], [354, 108], [351, 147], [349, 176], [345, 225], [333, 117], [331, 253], [330, 155], [328, 184], [325, 289], [324, 232], [321, 322], [317, 354], [305, 168], [288, 259], [256, 310], [253, 339], [249, 87], [237, 229], [237, 208], [232, 339], [225, 85], [216, 229], [216, 208], [199, 326], [199, 250], [195, 229], [195, 208], [185, 90], [178, 341], [178, 320], [174, 222], [174, 201], [149, 197], [148, 245], [128, 219], [119, 198], [111, 243], [107, 222], [81, 196], [62, 238], [35, 62], [32, 127], [32, 84], [30, 231], [429, 271], [145, 75], [256, 257], [326, 208], [153, 221], [333, 96], [408, 268], [288, 107], [86, 220], [489, 279], [224, 252], [106, 84], [29, 205], [207, 98], [510, 119], [387, 266], [64, 208], [304, 192], [275, 228], [303, 149], [287, 309], [30, 148], [197, 347], [166, 77], [66, 186], [260, 213], [534, 173], [305, 368], [270, 89], [30, 174], [66, 85], [143, 92], [279, 209], [219, 350], [223, 324], [104, 191], [283, 331], [133, 242], [94, 241], [305, 133], [38, 110], [521, 136], [302, 93], [257, 236], [204, 81], [262, 110], [89, 82], [329, 140], [252, 289], [269, 284], [302, 230], [127, 90], [45, 191], [347, 205], [480, 250], [308, 273], [314, 333], [417, 252], [252, 363], [88, 67], [296, 288], [173, 98], [244, 318], [224, 104], [373, 251], [170, 244], [372, 264], [523, 270], [109, 70], [275, 349], [396, 253], [246, 104], [298, 216], [354, 129], [43, 216], [506, 219], [348, 196], [60, 105], [289, 248], [283, 368], [67, 65], [54, 139], [514, 283], [311, 213], [521, 247], [352, 245], [355, 98], [49, 170], [287, 90], [73, 240], [319, 108], [321, 297], [327, 163], [184, 78], [519, 188], [438, 257], [319, 372], [322, 253], [170, 257], [307, 294], [283, 291], [53, 122], [142, 194], [190, 250], [308, 252], [344, 267], [232, 356], [103, 209], [129, 71], [49, 58], [515, 204], [195, 200], [26, 98], [351, 166], [275, 255], [245, 264], [278, 314], [273, 332], [30, 195], [41, 161], [487, 236], [200, 319], [362, 260], [306, 352], [48, 237], [492, 110], [62, 231], [49, 78], [330, 273], [300, 329], [87, 179], [215, 201], [353, 138], [307, 113], [244, 242], [160, 92], [293, 349], [267, 302], [176, 315], [319, 94], [259, 198], [172, 342], [124, 191], [503, 115], [266, 366], [286, 266], [105, 98], [31, 63], [304, 309], [264, 329], [247, 275], [30, 169], [492, 271], [173, 197], [316, 318], [321, 285], [484, 289], [149, 220], [459, 256], [515, 229], [122, 82], [49, 99], [56, 70], [29, 228], [541, 168], [30, 119], [236, 204], [194, 100]]
    #listeRouteurs = outils.placement_routeurV1(matrice,entete) #à décommenter pour faire tourner l'algo 30min
    arbreMini = outils.relierRouteurs(listeRouteurs, backbone) #Renvoie la liste des coordonnées de toutes les fibres à placer (routeurs compris)
    prix = outils.prix(len(listeRouteurs),len(arbreMini),int(entete[3]),int(entete[4]))

    print(budget)
    print(prix)

    while prix > budget: #Tant qu'on dépasse le budget
        print('Suppression d un routeur...')
        listeRouteurs.pop(-1) #supprime le dernier routeur de la liste (celui avec le moins bon score)
        print('Recalcul de l arbre...')
        arbreMini = outils.relierRouteurs(listeRouteurs,backbone) #on recalcule l'arbre avec un routeur de moins
        prix = outils.prix(len(listeRouteurs),len(arbreMini),int(entete[3]),int(entete[4])) #on recalcule le prix
        print('Recalcul du prix...')
        print('===============')


    outils.ecrire_fichier(len(arbreMini),arbreMini,len(listeRouteurs),listeRouteurs)

